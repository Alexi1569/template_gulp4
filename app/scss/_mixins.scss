@mixin reset-list {
  list-style: none;
}

@mixin flex($jc: flex-start, $ai: stretch, $isInline: false, $fw: nowrap, $fd: row) {
  @if $isInline == true {
    display: inline-flex;
  } @else if $isInline == false {
    display: flex;
  }
  justify-content: $jc;
  align-items: $ai;
  flex-wrap: $fw;
  flex-direction: $fd;
}

@mixin bg($image, $repeat: no-repeat, $pos: center, $size: cover) {
  background: url($image) $repeat $pos;
  background-size: $size;
}

@mixin img($disp: block, $w: 100%, $h: auto) {
  display: block;
  width: $w;
  height: $h;
}

@mixin svg($fill: #000, $stroke: none, $w: auto, $h: auto) {
  display: inline-block;
  max-width: 100%;
  max-height: 100%;
  width: $w;
  height: $h;
  fill: $fill;
  stroke: $stroke;
}

@mixin hover {
  &:not([disabled]):hover {
    @content;
  }
}

@mixin round($val) {
  border-radius: $val;
}

@mixin media($screen, $isMaxWidth: true) {
  @if $isMaxWidth == true {
    @media screen and (max-width: $screen) {
      @content;
    }
  } @else {
    @media screen and (min-width: $screen) {
      @content;
    }
  }
}

@mixin center-absolute($x: 50%, $y: 50%, $transformX: -50%, $transformY: -50%) {
  position: absolute;
  left: $x;
  top: $y;
  transform: translate($transformX, $transformY);
}

@mixin link() {
  text-decoration: none;
  color: inherit;
}

@mixin before($d: inline-block) {
  content: '';
  display: $d;
  @content;
}

@mixin after($d: inline-block) {
  &:after {
    content: '';
    display: $d;
    @content;
  }
}